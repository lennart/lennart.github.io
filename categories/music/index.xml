<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Music on Lennart Melzer</title>
    <link>http://localhost:1313/categories/music/</link>
    <description>Recent content in Music on Lennart Melzer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
    
    <lastBuildDate>Sat, 01 Nov 2014 00:00:00 UTC</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/music/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Documentation: Tidal</title>
      <link>http://localhost:1313/product/tidal-documentation/</link>
      <pubDate>Sat, 01 Nov 2014 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/product/tidal-documentation/</guid>
      <description>&lt;p&gt;Having just recently learned about live coding in general, I got to know Tidal, a domain specific pattern language for live coding written in Haskell. Struggling with the hitherto state of the documentation being sprinkled across the mailing list, single Markdown files on github and the wiki, I put up a Github page and organized/themed the content that was already there.&lt;/p&gt;

&lt;p&gt;Staying in contact with the developers of Tidal, I tried grasp the concepts behind Tidal to make the documentation both an easy start for beginners, a handy reference for users and a knowledge base for conceptually interested researchers.&lt;/p&gt;

&lt;p&gt;Using only what github pages auto-build mechanism offers, I used twitter&amp;rsquo;s bootstrap in the sass variant and jekyll as the base for the page. I ordered the documentation into multiple chapters ranging from easy to complex and structured the list of available functions into logical groups.&lt;/p&gt;

&lt;p&gt;I added things like bootstrap&amp;rsquo;s scrollspy to help navigating a long list of menu entries and embedded syntax highlighting for the many code inlined snippets.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>HOME STREET HOME</title>
      <link>http://localhost:1313/product/homestreethomebs_de/</link>
      <pubDate>Thu, 30 Oct 2014 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/product/homestreethomebs_de/</guid>
      <description>&lt;p&gt;An interactive exhibition guide for an art project in Braunschweig, Germany (my hometown) by students of the local university of arts. x artists turn private to public and exhibit their appartments. Each exhibition site is presented on a stylized map of Braunschweig and accompained by an audiosnippet giving a brief description of the works found there.&lt;/p&gt;

&lt;p&gt;A friend of mine, who helped building &lt;strong&gt;Brave New Work&lt;/strong&gt; as well and is also studying at HBK Braunschweig (university of arts) took part in the exhibition. I helped conceptualizing the website, webapp and implemented the core structure for both. While Aaron took care of the content and design, I was mainly working on the maps used in the site.&lt;/p&gt;

&lt;p&gt;We used knowledge from the former audiowalk and stripped it to the bare minimum. It is a responsive single-page app working with geolocation and some javascript for interaction. I used Tilemill to produce a distinct look for the map, which was used as a poster design for advertising the exhibition in Braunschweig.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Stück 1998 — Manfred Werder — Pages 0761 - 0790</title>
      <link>http://localhost:1313/product/stuck_1998/</link>
      <pubDate>Thu, 30 Oct 2014 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/product/stuck_1998/</guid>
      <description>&lt;p&gt;SuperCollider transcription and live playback of about thirty pages of Manfred Werder&amp;rsquo;s elegant &amp;ldquo;Stück 1998&amp;rdquo;. Lacking a real Piano for the performance at HOME STREET HOME, or at least something pianoesque, this was a few long hours effort to produce a sound installation supplementing Aaron&amp;rsquo;s visual exhibition.&lt;/p&gt;

&lt;p&gt;Realizing a day before the exhibition we will not have a piano for Lea to play a part of Manfred Werder&amp;rsquo;s composition, we decided to transcribe the sheet music (PDF) into a SuperCollider script.&lt;/p&gt;

&lt;p&gt;Due to its conceptual simplicity, &amp;ldquo;Stück 1998&amp;rdquo; could be easily parsed into a machine readable form. The composition is made up of succeeding notes of different (chosen by dice rolls) pitches played for six seconds, followed by six seconds rest.&lt;/p&gt;

&lt;p&gt;I parsed the original document into an array of pitches which then were converted from german pitch notation into midi notes.&lt;/p&gt;

&lt;p&gt;A minimalistic sine oscillator from SuperCollider and a simple Envelope was use for tone generation. We interlaced the pitch pattern with an infinite pattern of rests and set the tempo to be six seconds each bar, that&amp;rsquo;s about it.&lt;/p&gt;

&lt;p&gt;The SuperCollider script ran for four hours from my laptop (I luckily had with me for the exhibition) and audio was amplified to play out of the first floor window producing a sublime sound installation for Aaron&amp;rsquo;s visual exihibtion in front of the house. People passing by, or visiting the exihibition unconsciously took notice of the music.&lt;/p&gt;

&lt;p&gt;During chats with visitors, many were trying to find a way to see &lt;em&gt;more&lt;/em&gt; of the exihibition, being lured to believe there has to be something else. Though no one explicity talked about the music being played, it seemed to have the expected effect on recipients: being unwillingly exposed to it without being aware of being so. No one was able to categorize or even form an opinion about the music being good, or bad, still it had a subtle effect on them.&lt;/p&gt;

&lt;p&gt;Technically we tried to leave the implementation as simple as possible, to keep with the spirit of the composition. The &lt;a href=&#34;https://gist.github.com/lennart/fbb901667c19f66d3d4e&#34;&gt;Script&lt;/a&gt; is about three hundred and fifty lines of code, from which two hundred and fifty are just the formatted lines of pitches.  Thirty lines for converting pitches to midi notes, roughly eleven lines for the tone generator, five for the pattern, four for playback control (though we didn&amp;rsquo;t need to pause) and the rest are debug, or empty lines.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>grammophon</title>
      <link>http://localhost:1313/product/grammophon/</link>
      <pubDate>Tue, 02 Mar 2010 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/product/grammophon/</guid>
      <description>

&lt;p&gt;nifty frontend for &lt;del&gt;upcoming&lt;/del&gt; distributed, decentralized music management.
I tried hard, but it stayed a prototype, until it became abandoned.&lt;/p&gt;

&lt;h2 id=&#34;idea:4650e17b77f8eb081291cfaa4085d5c7&#34;&gt;idea&lt;/h2&gt;

&lt;p&gt;At first I tried to reinvent something that was already there: &lt;a href=&#34;http://github.com/RJ/playdar-core&#34;&gt;&lt;strong&gt;playdar&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;
Try to grasp the idea behind &lt;strong&gt;playdar&lt;/strong&gt; first, being able to enter any artist/track combination and let playdar to the heavy lifting, in this case &lt;em&gt;get the nearest location from where you can play that song&lt;/em&gt;. Now combine this with your average music consumption and you might realize that there&amp;rsquo;s still a need for management. Something that &lt;strong&gt;playdar&lt;/strong&gt; itself doesn&amp;rsquo;t and &lt;em&gt;by design&lt;/em&gt; will not offer.&lt;/p&gt;

&lt;p&gt;People use &lt;strong&gt;iTunes™&lt;/strong&gt; for a reason, not because they love apple so much, but because it takes the load of music (and sadly recently media) management off your back. It&amp;rsquo;s elegant and easy to use.&lt;/p&gt;

&lt;p&gt;So you might ask:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;what&amp;rsquo;s wrong with using iTunes?&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;There&amp;rsquo;s nothing wrong with the &lt;em&gt;original idea&lt;/em&gt; behind &lt;strong&gt;iTunes&lt;/strong&gt;, it&amp;rsquo;s the current state of the &lt;em&gt;implementation&lt;/em&gt;. The concept of &lt;strong&gt;UNIX&amp;rsquo;s&lt;/strong&gt; command line applications applied to GUI-based apps, &amp;ldquo;let &lt;strong&gt;one&lt;/strong&gt; application do &lt;strong&gt;one&lt;/strong&gt; thing only and therefore do it &lt;strong&gt;extraordinary well&lt;/strong&gt;&amp;rdquo;, has seen it&amp;rsquo;s manifestation in the &lt;strong&gt;OPENStep&lt;/strong&gt; draft and current implementation in Apple&amp;rsquo;s &lt;strong&gt;Mac OS X&lt;/strong&gt;. Your operating system should have &lt;strong&gt;one&lt;/strong&gt; application to manage your contacts, &lt;strong&gt;one&lt;/strong&gt; for managing your calendar, &lt;strong&gt;one&lt;/strong&gt; for looking up words, &lt;strong&gt;one&lt;/strong&gt; for viewing documents&amp;hellip; the list goes on. I appreciate Apple&amp;rsquo;s way of doing that and therefore I am using it, despite the fact that I don&amp;rsquo;t like this company &lt;em&gt;at all&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;They &lt;em&gt;did&lt;/em&gt; a good job, but now we&amp;rsquo;re in the age of cloud-computing, constant internet connection and so on. Times have changed and what once was a simple &lt;em&gt;music player&lt;/em&gt; called iTunes, is now merely a host for random upcoming store shelves for the Apple company, selling and trying to manage everything not limited to music anymore.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s face it:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;iTunes&lt;/strong&gt; has become the most bloated piece of software, avenged to the league of horrible things like &lt;strong&gt;eclipse&lt;/strong&gt; or the &lt;strong&gt;ICQ&lt;/strong&gt;-client.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;They failed at the heart of their current operating system, letting their former &lt;strong&gt;music player&lt;/strong&gt; become an operating system itself, throwing away the aforementioned concept of &amp;ldquo;do &lt;strong&gt;one&lt;/strong&gt; thing and do it well&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;One should take into account that Apple is still a company and they deploy iTunes to &lt;strong&gt;Mac OS X&lt;/strong&gt; as well as Windows, so there is little reason why they shouldn&amp;rsquo;t put their main selling product (the iTunes-Store frontend) into their most used desktop application.&lt;br /&gt;
Fair enough, but I &lt;em&gt;want&lt;/em&gt; that simplicity, I &lt;em&gt;want&lt;/em&gt; that &amp;ldquo;do &lt;strong&gt;one&lt;/strong&gt; thing and do it well&amp;rdquo; concept, especially for my music, but also for movies and maybe even music videos. I &lt;em&gt;want&lt;/em&gt; separate applications for that and I want each of them to network. That&amp;rsquo;s the main argument why I don&amp;rsquo;t want to use iTunes anymore.&lt;br /&gt;
Apple&amp;rsquo;s implementation of the DAAP-Protocol in iTunes is a joke. I don&amp;rsquo;t want to log into my iTunes-Store account to hear streamed music from the computer standing next to me.&lt;br /&gt;
Let&amp;rsquo;s repeat, &amp;ldquo;&lt;strong&gt;playdar&lt;/strong&gt; let&amp;rsquo;s me hear the songs I want, from the nearest location that has it available&amp;rdquo;, so to put it with &lt;a href=&#34;http://github.com/jchris&#34;&gt;jchris&amp;rsquo;&lt;/a&gt; words &lt;a href=&#34;http://jchrisa.net/drl/_design/sofa/_show/post/Imagine-There-s-No-YouTube&#34;&gt;&amp;ldquo;This is not a technology problem, it&amp;rsquo;s a problem of imagination.&amp;rdquo;&lt;/a&gt;.&lt;br /&gt;
&lt;a href=&#34;http://playlick.com&#34;&gt;&lt;strong&gt;playlick&lt;/strong&gt;&lt;/a&gt; is the first part of the puzzle, but for me, it lacks a lot of stuff, mainly it lacks the desktop-application-feeling.&lt;br /&gt;
This project is an attempt to build exactly that, a &amp;ldquo;desktop-like&amp;rdquo; application serving just one purpose &lt;em&gt;managing the music you listen to, regardless of where it is physically located&lt;/em&gt;. Think of it as the &lt;a href=&#34;http://grooveshark.com/&#34;&gt;&lt;strong&gt;grooveshark&lt;/strong&gt;&lt;/a&gt; but without the necessary coupling to the cloud. If there&amp;rsquo;s a song on your harddrive, then you can play it. If it is just available on youtube, then you can play it. I really like grooveshark, but the fact, that their database is far away from complete and predictably will always be, renders it useless to me.&lt;/p&gt;

&lt;h2 id=&#34;implementation:4650e17b77f8eb081291cfaa4085d5c7&#34;&gt;Implementation&lt;/h2&gt;

&lt;p&gt;At first I wanted it to be a Cocoa application, hence Mac OS X only.&lt;br /&gt;
Great, nothing wrong with that, Cocoa offers a great potential for building efficient and elegant applications, but it&amp;rsquo;s limited to one platform and still, Apple&amp;rsquo;s mashup-capabilities for Software development are kind of&amp;hellip;non-existant.&lt;br /&gt;
So currently this project is using Adobe&amp;rsquo;s Flash runtime, specifically the Flex 4 SDK and the &lt;a href=&#34;http://github.com/robotlegs/robotlegs-framework&#34;&gt;robotlegs-framework&lt;/a&gt;, but one should consider this a &lt;em&gt;proof-of-concept&lt;/em&gt;, an idea put into bits. In the future there may be native applications for each platform, but for now Flash serves well being available on all major platforms.&lt;br /&gt;
I started implementing &lt;a href=&#34;http://github.com/lennart/playdar-core/tree/crossdomain&#34;&gt;dynamic crossdomain.xml generation into playdar-core&lt;/a&gt; to allow flex applications to interface with your local playdar daemon. I use imlucas&amp;rsquo; as3playdar to interface with playdar and started to integrate blip.fm read-only support (which is one of the sources I wanted to have access to). At the current stage, simple search, blip.fm feed-loading, resolving, playlist building and playing works. That said, there is apparently nothing of the mentioned &lt;em&gt;managing&lt;/em&gt; capabilites integrated.&lt;/p&gt;

&lt;h2 id=&#34;usage:4650e17b77f8eb081291cfaa4085d5c7&#34;&gt;Usage&lt;/h2&gt;

&lt;p&gt;I try to keep a working up2date version hosted on the corresponding github-page for this project. You currently need a crossdomain-enabled built of playdar installed on you local computer and there are no prebuilt installers yet. One could pretty much say, this is still a developers project and not usable for anyone else. However, as soon as the crossdomain support is merged into playdar, using it should be as simple as clicking on the &amp;ldquo;Playdar.prefpane&amp;rdquo;, or the &amp;ldquo;Windar Installer&amp;rdquo; and you&amp;rsquo;re done.&lt;/p&gt;

&lt;h2 id=&#34;the-future:4650e17b77f8eb081291cfaa4085d5c7&#34;&gt;The Future™&lt;/h2&gt;

&lt;p&gt;I cannot resist to use &lt;a href=&#34;http://couchdb.apache.org/&#34;&gt;couchdb&lt;/a&gt; as the database for the music metadata, sadly there is currently no native erlang implementation of &lt;a href=&#34;http://lucene.apache.org/java/docs/&#34;&gt;lucene&lt;/a&gt; or any other search-indexer.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>